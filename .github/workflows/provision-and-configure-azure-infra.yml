# This is a basic workflow to help you get started with Actions

name: Provision and Configure Azure Infrastructure

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Terraform_Provision:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: /home/runner/work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Intial_Terraform

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

    
      # Install the preferred version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5
      
      - name: Generate runner registration token 
        run: |
            echo "token = $(curl -L   -X POST   -H "Accept: application/vnd.github+json"   -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }} "  -H "X-GitHub-Api-Version: 2022-11-28"   https://api.github.com/repos/owainow/aks-zero-trust-demo/actions/runners/registration-token | jq -r .token)"
            echo "GH_runner_token=$token" >> $GITHUB_ENV
     
      - name: Echo vars
        run: echo "$GITHUB_CONTEXT" && echo "$GH_runner_token"
     
     # Run Terraform Init
      - name: Terraform Init for Intial Terraform Config
        working-directory: /home/runner/work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Intial_Terraform
        id: init
        env:
         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
         ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
         RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
         STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
         CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
         TF_VAR_gh_pat: $GH_runner_token
         TF_VAR_gh_repo_url: ${{ secrets.TF_VAR_GH_REPO_URL }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"
      
      # Run Terraform Apply with Auto Approve
      - name: Terraform Apply for Intial Terraform Config
        working-directory: /home/runner/work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Intial_Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_gh_pat: $GH_runner_token
          TF_VAR_gh_repo_url: ${{ secrets.TF_VAR_GH_REPO_URL }}
        run: terraform apply -auto-approve -var="gh_pat=$GH_runner_token" -var="gh_repo_url=${{ secrets.TF_VAR_GH_REPO_URL }}"

        


      
      
