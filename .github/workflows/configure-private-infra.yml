# This is a basic workflow to help you get started with Actions

name: TEMP Configure infra post deployment

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Terraform_Provision:
    # The type of runner that the job will run on
    runs-on: self-hosted
    
    
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
     # Install required packages
      - name: Install required packages.
        run: apt-get install unzip -y && apt-get install python3 -y && apt-get install sudo -y && sudo apt-get install npm -y && curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash && az aks install-cli | sudo bash
    
      - name: Azure Login
        uses: Azure/login@v1
        with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Install the preferred version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5
    
      - name: Enable local accounts
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
        run: echo "Accounts enabled Removed for now"
      #  run: az aks update -g oow-aks-zero-trust-demo -n aks-oow-zerotrust --enable-local-accounts      REMOVED FOR NOW
      # Will use cluster name & RG output instead of hard coded name  here when running full workflow
      
      - name: Get KubeConfig
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
        run: az aks get-credentials -g oow-aks-zero-trust-demo -n aks-oow-zerotrust --overwrite-existing --admin
      # Will use cluster name & RG output instead of hard coded name  here when running full workflow

      - name: Setup Cluster for GitOps
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        run: az feature register --namespace Microsoft.ContainerService --name AKS-ExtensionManager && \ 
               az provider register --namespace Microsoft.Kubernetes && az provider register --namespace Microsoft.ContainerService && \
               az provider register --namespace Microsoft.KubernetesConfiguration && \
               az extension add -n k8s-configuration --upgrade && az extension add -n k8s-extension --upgrade && \
      
      - name: Install Flux
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        run: az k8s-extension create -g oow-aks-zero-trust-demo --cluster-type managedClusters --cluster-name aks-oow-zerotrust --extension-type flux --release-namespace flux-system --scope cluster --auto-upgrade-minor-version true
      
      - name: Install Flux
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        run: az k8s-extension create -g oow-aks-zero-trust-demo --cluster-type managedClusters --cluster-name aks-oow-zerotrust --extension-type flux --release-namespace flux-system --scope cluster --auto-upgrade-minor-version true
      
      
      - name: Configure Flux
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        run: az k8s-configuration flux create -g $RG -c $CLUSTER \
            -n cluster-config --namespace cluster-config -t managedClusters \
            --scope cluster \
            -u https://github.com/owainow/aks-zero-trust-demo \
            --branch master  \
            --kustomization name=infrastructure path=./Cluster/infrastructure prune=true \
            --kustomization name=apps path=./apps/staging prune=true dependsOn=["infrastructure"] \

          
      # Run Terraform Init
      - name: Terraform Init for Intial Terraform Config
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        id: init
        env:
         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
         ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
         RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
         STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
         CONTAINER_NAME: ${{ secrets.CONTAINER_NAME_2 }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"
      
      # Run Terraform Apply with Auto Approve
      - name: Terraform Apply for Intial Terraform Config
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve
      
      - name: Disable local accounts
        working-directory: /actions-runner/_work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
        run: az aks update -g oow-aks-zero-trust-demo -n aks-oow-zerotrust --disable-local-accounts
      # Will use cluster name & RG output instead of hard coded name  here when running full workflow
      
