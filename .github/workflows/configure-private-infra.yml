# This is a basic workflow to help you get started with Actions

name: TEMP Configure infra post deployment

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Terraform_Provision:
    # The type of runner that the job will run on
    runs-on: self-hosted
    
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
     # Install required packages
      - name: Install required packages.
        run: apt-get install unzip -y && apt-get install python3 -y && apt-get install sudo -y && sudo apt-get install npm -y && curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash && az aks install-cli | sudo bash
    
      # Install the preferred version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5
      

          
      # Run Terraform Init
      - name: Terraform Init for Intial Terraform Config
<<<<<<< HEAD
        working-directory: /home/runner/work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
=======
        working-directory: /aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
>>>>>>> 6bb97c306a9d8c44d4190b423666586dcd4657af
        id: init
        env:
         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
         ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
         RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
         STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
         CONTAINER_NAME: ${{ secrets.CONTAINER_NAME_2 }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"
      
      # Run Terraform Apply with Auto Approve
      - name: Terraform Apply for Intial Terraform Config
<<<<<<< HEAD
        working-directory: /home/runner/work/aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
=======
        working-directory: /aks-zero-trust-demo/aks-zero-trust-demo/Terraform/Config_Terraform
>>>>>>> 6bb97c306a9d8c44d4190b423666586dcd4657af
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve

        


      
      
